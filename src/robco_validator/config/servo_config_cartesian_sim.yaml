use_gazebo: true # Whether the robot is started in a Gazebo simulation environment.

# Stopping & Halt Behavior
incoming_command_timeout: 0.1 # Timeout duration (in seconds) after which servoing stops if no new command is received.
num_outgoing_halt_msgs_to_publish: 4 # Number of halt messages to publish when stopping the robot.
halt_all_joints_in_joint_mode: true # Whether to halt all joints when operating in joint mode.
halt_all_joints_in_cartesian_mode: true # Whether to halt all joints when operating in Cartesian mode.

# Singularity & Joint Limits
lower_singularity_threshold: 30.0  # Start decelerating when the condition number hits this (close to singularity)
hard_stop_singularity_threshold: 50.0  # Stop when the condition number hits this
joint_limit_margin: 0.05 # A buffer (in radians) added to the joint limits to provide a safety margin.
leaving_singularity_threshold_multiplier: 2.0  # Multiply the hard stop limit by this when leaving singularity

# Collision Checking Settings
check_collisions: true  # Check collisions?
collision_check_rate: 40.0  # [Hz] Collision-checking can easily bog down a CPU if done too often.
self_collision_proximity_threshold: 0.05  # Start decelerating when a self-collision is this far [m]
scene_collision_proximity_threshold: 0.05  # Start decelerating when a scene collision is this far [m]

# MoveIt and Planning Scene Settings
move_group_name: robco_arm # Name of the MoveIt move group (commonly "manipulator" or "arm").
planning_frame: world # The MoveIt planning frame (e.g., "base_link" or "world").
ee_frame_name: effector # Name of the end-effector link used to return its pose.
is_primary_planning_scene_monitor: true # Flag indicating whether this is the primary planning scene monitor.
monitored_planning_scene_topic: /servo_node/publish_planning_scene # Topic for the monitored planning scene.

# Outgoing Command Configuration
publish_period: 0.01 # Nominal publish period (inverse of the publish rate in seconds).
publish_joint_positions: false # Whether joint positions are published in the outgoing commands.
publish_joint_velocities: true # Whether joint velocities are published in the outgoing commands.
publish_joint_accelerations: false # Whether joint accelerations are published in the outgoing commands.
command_out_type: std_msgs/Float64MultiArray # "trajectory_msgs/JointTrajectory" or "std_msgs/Float64MultiArray"
command_out_topic: /joint_group_velocity_controller/commands  # Publish outgoing commands here
status_topic: /servo/status  # The topic where status messages are published.
low_latency_mode: true # Flag to enable low latency mode.

# Incoming Command Configuration
joint_topic: /joint_states  # Get joint states from this tpoic
command_in_type: "unitless" # "unitless" for normalized values or "speed_units" for m/s and rad/s
cartesian_command_in_topic: /servo/twist_cmd # Topic for incoming Cartesian twist commands.
joint_command_in_topic: /servo/joint_jog  # Topic for incoming joint angle commands
robot_link_command_frame: world # The reference frame for commands
scale: # Only important for unitless in type
  linear: 0.5 # Maximum linear velocity for Cartesian commands (in m/s).
  rotational: 0.5 # Maximum angular velocity for Cartesian commands (in rad/s).
  joint: 0.5 # Maximum joint angular or linear velocity for joint commands.
# override_velocity_scaling_factor: 0.0 # A scalar (between 0 and 1) to override the default jogging speed.

# Smoothing
smoothing_filter_plugin_name: "online_signal_smoothing::ButterworthFilterPlugin" # Name of the plugin used to smooth outgoing commands.
